import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class UI {
    /**object variables*/
    private JPanel panel;
    private JButton addProjectButton;
    private JTabbedPane tabbedPane;
    private JComboBox projectTypeJComboBox;
    private JLabel classificationLabel;
    private JTextField classificationTextField;
    private JButton editProjectButton;
    private JTextField managerTextField;
    private JTextField locationTextField;
    private JTextField customerIDTextField;
    private JLabel projectTypeLabel;
    private JLabel budgetLabel;
    private JLabel managerLabel;
    private JLabel locationLabel;
    private JLabel newNotRenovationLabel;
    private JLabel customerIDLabel;
    private JLabel estimatedDurationLabel;
    private JLabel estimatedStartLabel;
    private JLabel actualStartLabel;
    private JLabel actualEndLabel;
    private JLabel accumulatedCostLabel;
    private JPanel searchJPanel;
    private JPanel addOrEditJPanel;
    private JCheckBox newNotRenovationCheckBox;
    private JSpinner estimatedDurationSpinner;
    private JSpinner accumulatedCostSpinner;
    private JSpinner actualStartDaySpinner;
    private JSpinner actualStartMonthSpinner;
    private JSpinner actualStartYearSpinner;
    private JSpinner actualEndDaySpinner;
    private JSpinner estimatedStartDaySpinner;
    private JSpinner estimatedStartMonthSpinner;
    private JSpinner actualEndMonthSpinner;
    private JSpinner estimatedStartYearSpinner;
    private JSpinner actualEndYearSpinner;
    private JTextField typeTextField;
    private JSpinner floodingRiskSpinner;
    private JTextField buildingMaterialTextField;
    private JSpinner sizeSpinner;
    private JSpinner bedroomsSpinner;
    private JSpinner bathroomsSpinner;
    private JSpinner landSizeAcresSpinner;
    private JCheckBox garageCheckBox;
    private JTextField roofTextField;
    private JSpinner widthSpinner;
    private JSpinner spanSpinner;
    private JTextField overlayTextField;
    private JCheckBox natureReserveCheckBox;
    private JTextField compositionTextField;
    private JTextField excavatingTextField;
    private JCheckBox safetyTunnelCheckBox;
    private JSpinner lengthSpinner;
    private JSpinner groundStabilitySpinner;
    private JLabel typeLabel;
    private JLabel floodingRiskLabel;
    private JLabel buildingMaterialLabel;
    private JLabel sizeLabel;
    private JLabel unitOfSizeLabel;
    private JLabel bedroomsLabel;
    private JLabel landSizeAcresLabel;
    private JLabel bathroomsLabel;
    private JLabel garageLabel;
    private JLabel roofLabel;
    private JLabel widthLabel;
    private JLabel spanLabel;
    private JLabel overlayLabel;
    private JLabel compositionLabel;
    private JLabel natureReserveLabel;
    private JLabel excavatingLabel;
    private JLabel safetyTunnelLabel;
    private JLabel lengthLabel;
    private JLabel groundStabilityLabel;
    private JSpinner budgetSpinner; //budget spinner
    private JComboBox projectTypeSearchJComboBox;
    private JButton projectTypeSearchButton;
    private JButton costRangeSearchButton;
    private JButton projectManagerSearchButton;
    private JSpinner maxCostRangeSearchSpinner;
    private JSpinner minCostRangeSearchSpinner;
    private JTextField projectManagerSearchTextField;
    private JTextArea searchResultsTextArea;
    private JLabel minCostRangeSearchLabel;
    private JLabel maxCostRangeSearchLabel;

    /**main method: program start*/
    public static void main(String[] args) {
        ProjectManager PM = new ProjectManager();

        JFrame frame = new JFrame("Jenga Design Ltd. Portfolio Manager");
        frame.setContentPane(new UI().panel);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);

        //UI GUI = new UI(); //I think I need this line
        //Actually I don't think I do because the UI object is constructed in the main method now
        pre_fill();
    }

    /**object constructor*/
    public UI() {
        //this stuff must go in main method or setContentPane calls itself forever
        /*
        JFrame frame = new JFrame("Jenga Design Ltd. Portfolio Manager");
        frame.setContentPane(panel1);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
        */

        setLAndF();

        setupGUI();

        projectTypeJComboBox.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

            }
        });
        editProjectButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

            }
        });
        addProjectButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

            }
        });
        projectTypeSearchButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

            }
        });
        projectManagerSearchButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

            }
        });
        costRangeSearchButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

            }
        });
    }

    /**object methods*/

    private static void pre_fill() {
        //pre-fill and do stuff for when program first starts up
        check_fields();
    }

    private static void check_fields() {
        //check that fields are correct format or block entry possibilities and let user know with a JOptionPane
    }

    private void setupGUI() {
        panel = new JPanel();
        panel.setLayout(new GridBagLayout());
        tabbedPane = new JTabbedPane();
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.BOTH;
        panel.add(tabbedPane, gbc);
        addOrEditJPanel = new JPanel();
        addOrEditJPanel.setLayout(new GridBagLayout());
        addOrEditJPanel.setInheritsPopupMenu(false);
        addOrEditJPanel.setName("estimated duration");
        tabbedPane.addTab("Add/Edit Project", addOrEditJPanel);
        projectTypeJComboBox = new JComboBox();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 1;
        gbc.gridwidth = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addOrEditJPanel.add(projectTypeJComboBox, gbc);
        projectTypeLabel = new JLabel();
        projectTypeLabel.setText("project type");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(projectTypeLabel, gbc);
        classificationLabel = new JLabel();
        classificationLabel.setText("classification");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(classificationLabel, gbc);
        classificationTextField = new JTextField();
        classificationTextField.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 2;
        gbc.gridwidth = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addOrEditJPanel.add(classificationTextField, gbc);
        budgetLabel = new JLabel();
        budgetLabel.setText("budget");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(budgetLabel, gbc);
        managerLabel = new JLabel();
        managerLabel.setText("manager");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 4;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(managerLabel, gbc);
        locationLabel = new JLabel();
        locationLabel.setText("location");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 5;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(locationLabel, gbc);
        newNotRenovationLabel = new JLabel();
        newNotRenovationLabel.setText("new or renovation");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 6;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(newNotRenovationLabel, gbc);
        customerIDLabel = new JLabel();
        customerIDLabel.setText("customer ID");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 7;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(customerIDLabel, gbc);
        estimatedDurationLabel = new JLabel();
        estimatedDurationLabel.setText("estimated duration");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 8;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(estimatedDurationLabel, gbc);
        actualStartLabel = new JLabel();
        actualStartLabel.setText("actual start d/m/y");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 10;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(actualStartLabel, gbc);
        actualEndLabel = new JLabel();
        actualEndLabel.setText("actual end d/m/y");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 11;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(actualEndLabel, gbc);
        accumulatedCostLabel = new JLabel();
        accumulatedCostLabel.setText("accumulated cost");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 12;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(accumulatedCostLabel, gbc);
        managerTextField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 4;
        gbc.gridwidth = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addOrEditJPanel.add(managerTextField, gbc);
        locationTextField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 5;
        gbc.gridwidth = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addOrEditJPanel.add(locationTextField, gbc);
        customerIDTextField = new JTextField();
        customerIDTextField.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 7;
        gbc.gridwidth = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addOrEditJPanel.add(customerIDTextField, gbc);
        //estimated duration spinner
        SpinnerModel estimatedDurationSpinnerModel = new SpinnerNumberModel(0, 0, Integer.MAX_VALUE, 1);
        estimatedDurationSpinner = new JSpinner(estimatedDurationSpinnerModel);
        estimatedDurationSpinner.setInheritsPopupMenu(true);
        estimatedDurationSpinner.setRequestFocusEnabled(true);
        estimatedDurationSpinner.setVisible(true);
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 8;
        gbc.gridwidth = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addOrEditJPanel.add(estimatedDurationSpinner, gbc);
        //accumulated cost spinner
        SpinnerModel accumulatedCostSpinnerModel = new SpinnerNumberModel(0, 0, Integer.MAX_VALUE, 1);
        accumulatedCostSpinner = new JSpinner(accumulatedCostSpinnerModel);
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 12;
        gbc.gridwidth = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addOrEditJPanel.add(accumulatedCostSpinner, gbc);
        SpinnerModel actualStartDaySpinnerModel = new SpinnerNumberModel(1, 1, 31, 1);
        actualStartDaySpinner = new JSpinner(actualStartDaySpinnerModel);
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 10;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addOrEditJPanel.add(actualStartDaySpinner, gbc);
        SpinnerModel actualStartMonthSpinnerModel = new SpinnerNumberModel(1, 1, 12, 1);
        actualStartMonthSpinner = new JSpinner(actualStartMonthSpinnerModel);
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 10;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addOrEditJPanel.add(actualStartMonthSpinner, gbc);
        SpinnerModel actualStartYearSpinnerModel = new SpinnerNumberModel(2022, 1900, 2200, 1);
        actualStartYearSpinner = new JSpinner(actualStartYearSpinnerModel);
        gbc = new GridBagConstraints();
        gbc.gridx = 5;
        gbc.gridy = 10;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addOrEditJPanel.add(actualStartYearSpinner, gbc);
        SpinnerModel actualEndDaySpinnerModel = new SpinnerNumberModel(1, 1, 31, 1);
        actualEndDaySpinner = new JSpinner(actualEndDaySpinnerModel);
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 11;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addOrEditJPanel.add(actualEndDaySpinner, gbc);
        SpinnerModel estimatedStartDaySpinnerModel = new SpinnerNumberModel(1, 1, 31, 1);
        estimatedStartDaySpinner = new JSpinner(estimatedStartDaySpinnerModel);
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 9;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addOrEditJPanel.add(estimatedStartDaySpinner, gbc);
        SpinnerModel estimatedStartMonthSpinnerModel = new SpinnerNumberModel(1, 1, 12, 1);
        estimatedStartMonthSpinner = new JSpinner(estimatedStartMonthSpinnerModel);
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 9;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addOrEditJPanel.add(estimatedStartMonthSpinner, gbc);
        SpinnerModel actualEndMonthSpinnerModel = new SpinnerNumberModel(1, 1, 12, 1);
        actualEndMonthSpinner = new JSpinner(actualEndMonthSpinnerModel);
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 11;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addOrEditJPanel.add(actualEndMonthSpinner, gbc);
        SpinnerModel estimatedStartYearSpinnerModel = new SpinnerNumberModel(2022, 1900, 2200, 1);
        estimatedStartYearSpinner = new JSpinner(estimatedStartYearSpinnerModel);
        gbc = new GridBagConstraints();
        gbc.gridx = 5;
        gbc.gridy = 9;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addOrEditJPanel.add(estimatedStartYearSpinner, gbc);
        SpinnerModel estimatedEndYearSpinnerModel = new SpinnerNumberModel(2022, 1900, 2200, 1);
        actualEndYearSpinner = new JSpinner(estimatedEndYearSpinnerModel);
        gbc = new GridBagConstraints();
        gbc.gridx = 5;
        gbc.gridy = 11;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addOrEditJPanel.add(actualEndYearSpinner, gbc);
        typeLabel = new JLabel();
        typeLabel.setText("type");
        gbc = new GridBagConstraints();
        gbc.gridx = 7;
        gbc.gridy = 1;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(typeLabel, gbc);
        estimatedStartLabel = new JLabel();
        estimatedStartLabel.setText("estimated start d/m/y");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 9;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(estimatedStartLabel, gbc);
        floodingRiskLabel = new JLabel();
        floodingRiskLabel.setText("flooding risk");
        gbc = new GridBagConstraints();
        gbc.gridx = 7;
        gbc.gridy = 2;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(floodingRiskLabel, gbc);
        buildingMaterialLabel = new JLabel();
        buildingMaterialLabel.setText("building material");
        gbc = new GridBagConstraints();
        gbc.gridx = 7;
        gbc.gridy = 3;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(buildingMaterialLabel, gbc);
        sizeLabel = new JLabel();
        sizeLabel.setText("size");
        gbc = new GridBagConstraints();
        gbc.gridx = 7;
        gbc.gridy = 4;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(sizeLabel, gbc);
        bedroomsLabel = new JLabel();
        bedroomsLabel.setText("bedrooms");
        gbc = new GridBagConstraints();
        gbc.gridx = 7;
        gbc.gridy = 5;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(bedroomsLabel, gbc);
        landSizeAcresLabel = new JLabel();
        landSizeAcresLabel.setText("land size (acres)");
        gbc = new GridBagConstraints();
        gbc.gridx = 7;
        gbc.gridy = 6;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(landSizeAcresLabel, gbc);
        bathroomsLabel = new JLabel();
        bathroomsLabel.setText("bathrooms");
        gbc = new GridBagConstraints();
        gbc.gridx = 7;
        gbc.gridy = 7;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(bathroomsLabel, gbc);
        roofLabel = new JLabel();
        roofLabel.setText("roof");
        gbc = new GridBagConstraints();
        gbc.gridx = 7;
        gbc.gridy = 9;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(roofLabel, gbc);
        typeTextField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 9;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addOrEditJPanel.add(typeTextField, gbc);
        SpinnerModel floodingRiskSpinnerModel = new SpinnerNumberModel(0, 0, 10, 1);
        floodingRiskSpinner = new JSpinner(floodingRiskSpinnerModel);
        gbc = new GridBagConstraints();
        gbc.gridx = 9;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addOrEditJPanel.add(floodingRiskSpinner, gbc);
        buildingMaterialTextField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 9;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addOrEditJPanel.add(buildingMaterialTextField, gbc);
        SpinnerModel sizeSpinnerModel = new SpinnerNumberModel(0, 0, Integer.MAX_VALUE, 1);
        sizeSpinner = new JSpinner(sizeSpinnerModel);
        gbc = new GridBagConstraints();
        gbc.gridx = 9;
        gbc.gridy = 4;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addOrEditJPanel.add(sizeSpinner, gbc);
        SpinnerModel bedroomsSpinnerModel = new SpinnerNumberModel(0, 0, Integer.MAX_VALUE, 1);
        bedroomsSpinner = new JSpinner(bedroomsSpinnerModel);
        gbc = new GridBagConstraints();
        gbc.gridx = 9;
        gbc.gridy = 5;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addOrEditJPanel.add(bedroomsSpinner, gbc);
        SpinnerModel bathroomsSpinnerModel = new SpinnerNumberModel(0, 0, Integer.MAX_VALUE, 1);
        bathroomsSpinner = new JSpinner(bathroomsSpinnerModel);
        gbc = new GridBagConstraints();
        gbc.gridx = 9;
        gbc.gridy = 7;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addOrEditJPanel.add(bathroomsSpinner, gbc);
        SpinnerModel landSizeAcresSpinnerModel = new SpinnerNumberModel(0, 0, Integer.MAX_VALUE, 0.1);
        landSizeAcresSpinner = new JSpinner(landSizeAcresSpinnerModel);
        gbc = new GridBagConstraints();
        gbc.gridx = 9;
        gbc.gridy = 6;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addOrEditJPanel.add(landSizeAcresSpinner, gbc);
        garageCheckBox = new JCheckBox();
        garageCheckBox.setText("garage");
        gbc = new GridBagConstraints();
        gbc.gridx = 9;
        gbc.gridy = 8;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(garageCheckBox, gbc);
        roofTextField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 9;
        gbc.gridy = 9;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addOrEditJPanel.add(roofTextField, gbc);
        widthLabel = new JLabel();
        widthLabel.setText("width");
        gbc = new GridBagConstraints();
        gbc.gridx = 7;
        gbc.gridy = 10;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(widthLabel, gbc);
        spanLabel = new JLabel();
        spanLabel.setText("span");
        gbc = new GridBagConstraints();
        gbc.gridx = 7;
        gbc.gridy = 11;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(spanLabel, gbc);
        overlayLabel = new JLabel();
        overlayLabel.setText("overlay");
        gbc = new GridBagConstraints();
        gbc.gridx = 7;
        gbc.gridy = 12;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(overlayLabel, gbc);
        SpinnerModel widthSpinnerModel = new SpinnerNumberModel(0, 0, Integer.MAX_VALUE, 5);
        widthSpinner = new JSpinner(widthSpinnerModel);
        gbc = new GridBagConstraints();
        gbc.gridx = 9;
        gbc.gridy = 10;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addOrEditJPanel.add(widthSpinner, gbc);
        SpinnerModel spanSpinnerModel = new SpinnerNumberModel(0, 0, Integer.MAX_VALUE, 5);
        spanSpinner = new JSpinner(spanSpinnerModel);
        gbc = new GridBagConstraints();
        gbc.gridx = 9;
        gbc.gridy = 11;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addOrEditJPanel.add(spanSpinner, gbc);
        overlayTextField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 9;
        gbc.gridy = 12;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addOrEditJPanel.add(overlayTextField, gbc);
        unitOfSizeLabel = new JLabel();
        unitOfSizeLabel.setText("unit");
        gbc = new GridBagConstraints();
        gbc.gridx = 8;
        gbc.gridy = 4;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(unitOfSizeLabel, gbc);
        compositionLabel = new JLabel();
        compositionLabel.setText("current composition");
        gbc = new GridBagConstraints();
        gbc.gridx = 7;
        gbc.gridy = 13;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(compositionLabel, gbc);
        natureReserveLabel = new JLabel();
        natureReserveLabel.setText("nature reserve");
        gbc = new GridBagConstraints();
        gbc.gridx = 7;
        gbc.gridy = 14;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(natureReserveLabel, gbc);
        natureReserveCheckBox = new JCheckBox();
        natureReserveCheckBox.setText("nature reserve");
        gbc = new GridBagConstraints();
        gbc.gridx = 9;
        gbc.gridy = 14;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(natureReserveCheckBox, gbc);
        compositionTextField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 9;
        gbc.gridy = 13;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addOrEditJPanel.add(compositionTextField, gbc);
        excavatingLabel = new JLabel();
        excavatingLabel.setText("excavating");
        gbc = new GridBagConstraints();
        gbc.gridx = 11;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(excavatingLabel, gbc);
        excavatingTextField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 12;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addOrEditJPanel.add(excavatingTextField, gbc);
        safetyTunnelCheckBox = new JCheckBox();
        safetyTunnelCheckBox.setText("safety tunnel");
        gbc = new GridBagConstraints();
        gbc.gridx = 12;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(safetyTunnelCheckBox, gbc);
        SpinnerModel lengthSpinnerModel = new SpinnerNumberModel(0, 0, Integer.MAX_VALUE, 1);
        lengthSpinner = new JSpinner(lengthSpinnerModel);
        gbc = new GridBagConstraints();
        gbc.gridx = 12;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addOrEditJPanel.add(lengthSpinner, gbc);
        SpinnerModel groundStabilitySpinnerModel = new SpinnerNumberModel(0, 0, 100, 1);
        groundStabilitySpinner = new JSpinner(groundStabilitySpinnerModel);
        gbc = new GridBagConstraints();
        gbc.gridx = 12;
        gbc.gridy = 4;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addOrEditJPanel.add(groundStabilitySpinner, gbc);
        safetyTunnelLabel = new JLabel();
        safetyTunnelLabel.setText("safety tunnel");
        gbc = new GridBagConstraints();
        gbc.gridx = 11;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(safetyTunnelLabel, gbc);
        lengthLabel = new JLabel();
        lengthLabel.setText("length");
        gbc = new GridBagConstraints();
        gbc.gridx = 11;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(lengthLabel, gbc);
        groundStabilityLabel = new JLabel();
        groundStabilityLabel.setText("ground stability");
        gbc = new GridBagConstraints();
        gbc.gridx = 11;
        gbc.gridy = 4;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(groundStabilityLabel, gbc);
        editProjectButton = new JButton();
        editProjectButton.setText("Edit project");
        gbc = new GridBagConstraints();
        gbc.gridx = 11;
        gbc.gridy = 6;
        gbc.gridwidth = 2;
        gbc.gridheight = 4;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        addOrEditJPanel.add(editProjectButton, gbc);
        addProjectButton = new JButton();
        addProjectButton.setText("Record a new project");
        gbc = new GridBagConstraints();
        gbc.gridx = 11;
        gbc.gridy = 11;
        gbc.gridwidth = 2;
        gbc.gridheight = 4;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        addOrEditJPanel.add(addProjectButton, gbc);
        newNotRenovationCheckBox = new JCheckBox();
        newNotRenovationCheckBox.setText("new");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 6;
        gbc.gridwidth = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(newNotRenovationCheckBox, gbc);
        garageLabel = new JLabel();
        garageLabel.setText("garage");
        gbc = new GridBagConstraints();
        gbc.gridx = 7;
        gbc.gridy = 8;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        addOrEditJPanel.add(garageLabel, gbc);
        SpinnerModel budgetSpinnerModel = new SpinnerNumberModel(0, 0, Integer.MAX_VALUE, 1);
        budgetSpinner = new JSpinner(budgetSpinnerModel);
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 3;
        gbc.gridwidth = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        addOrEditJPanel.add(budgetSpinner, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 1;
        gbc.gridheight = 14;
        gbc.fill = GridBagConstraints.VERTICAL;
        addOrEditJPanel.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 6;
        gbc.gridy = 1;
        gbc.gridheight = 14;
        gbc.fill = GridBagConstraints.VERTICAL;
        addOrEditJPanel.add(spacer2, gbc);
        final JPanel spacer3 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 10;
        gbc.gridy = 1;
        gbc.gridheight = 14;
        gbc.fill = GridBagConstraints.VERTICAL;
        addOrEditJPanel.add(spacer3, gbc);
        final JPanel spacer4 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 13;
        gbc.gridy = 1;
        gbc.gridheight = 14;
        gbc.fill = GridBagConstraints.VERTICAL;
        addOrEditJPanel.add(spacer4, gbc);
        final JPanel spacer5 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.gridheight = 14;
        gbc.fill = GridBagConstraints.VERTICAL;
        addOrEditJPanel.add(spacer5, gbc);
        final JPanel spacer6 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.gridwidth = 12;
        gbc.fill = GridBagConstraints.VERTICAL;
        addOrEditJPanel.add(spacer6, gbc);
        final JPanel spacer7 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 15;
        gbc.gridwidth = 12;
        gbc.fill = GridBagConstraints.VERTICAL;
        addOrEditJPanel.add(spacer7, gbc);
        searchJPanel = new JPanel();
        searchJPanel.setLayout(new GridBagLayout());
        tabbedPane.addTab("Search Projects", searchJPanel);
        projectTypeSearchButton = new JButton();
        projectTypeSearchButton.setText("search by project type");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        searchJPanel.add(projectTypeSearchButton, gbc);
        projectManagerSearchButton = new JButton();
        projectManagerSearchButton.setText("project manager search");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 6;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        searchJPanel.add(projectManagerSearchButton, gbc);
        costRangeSearchButton = new JButton();
        costRangeSearchButton.setBorderPainted(true);
        costRangeSearchButton.setContentAreaFilled(true);
        costRangeSearchButton.setText("cost range search");
        costRangeSearchButton.setVerticalAlignment(0);
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 10;
        gbc.gridheight = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        searchJPanel.add(costRangeSearchButton, gbc);
        projectTypeSearchJComboBox = new JComboBox();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 2;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.BOTH;
        searchJPanel.add(projectTypeSearchJComboBox, gbc);
        SpinnerModel minCostRangeSpinnerModel = new SpinnerNumberModel(0, 0, Integer.MAX_VALUE, 1);
        minCostRangeSearchSpinner = new JSpinner(minCostRangeSpinnerModel);
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 10;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.BOTH;
        searchJPanel.add(minCostRangeSearchSpinner, gbc);
        minCostRangeSearchLabel = new JLabel();
        minCostRangeSearchLabel.setText("min");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 10;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.VERTICAL;
        searchJPanel.add(minCostRangeSearchLabel, gbc);
        maxCostRangeSearchLabel = new JLabel();
        maxCostRangeSearchLabel.setText("max");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 11;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.VERTICAL;
        searchJPanel.add(maxCostRangeSearchLabel, gbc);
        projectManagerSearchTextField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 6;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.BOTH;
        searchJPanel.add(projectManagerSearchTextField, gbc);
        searchResultsTextArea = new JTextArea();
        gbc = new GridBagConstraints();
        gbc.gridx = 5;
        gbc.gridy = 1;
        gbc.gridheight = 11;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        searchJPanel.add(searchResultsTextArea, gbc);
        final JPanel spacer8 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 4;
        gbc.fill = GridBagConstraints.VERTICAL;
        searchJPanel.add(spacer8, gbc);
        final JPanel spacer9 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 9;
        gbc.fill = GridBagConstraints.VERTICAL;
        searchJPanel.add(spacer9, gbc);
        final JPanel spacer10 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 5;
        gbc.fill = GridBagConstraints.VERTICAL;
        searchJPanel.add(spacer10, gbc);
        final JPanel spacer11 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 7;
        gbc.fill = GridBagConstraints.VERTICAL;
        searchJPanel.add(spacer11, gbc);
        final JPanel spacer12 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.VERTICAL;
        searchJPanel.add(spacer12, gbc);
        final JPanel spacer13 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 8;
        gbc.fill = GridBagConstraints.VERTICAL;
        searchJPanel.add(spacer13, gbc);
        final JPanel spacer14 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.VERTICAL;
        searchJPanel.add(spacer14, gbc);
        final JPanel spacer15 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 12;
        gbc.fill = GridBagConstraints.VERTICAL;
        searchJPanel.add(spacer15, gbc);
        final JPanel spacer16 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 6;
        gbc.gridy = 6;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        searchJPanel.add(spacer16, gbc);
        final JPanel spacer17 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 6;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        searchJPanel.add(spacer17, gbc);
        final JPanel spacer18 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 6;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        searchJPanel.add(spacer18, gbc);
        SpinnerModel maxCostRangeSpinnerModel = new SpinnerNumberModel(0, 0, Integer.MAX_VALUE, 1);
        maxCostRangeSearchSpinner = new JSpinner(maxCostRangeSpinnerModel);
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 11;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.BOTH;
        searchJPanel.add(maxCostRangeSearchSpinner, gbc);
    }

    private void setLAndF() {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }
        catch (UnsupportedLookAndFeelException e) {
            // handle exception
            e.printStackTrace();
        }
        catch (ClassNotFoundException e) {
            // handle exception
            e.printStackTrace();
        }
        catch (InstantiationException e) {
            // handle exception
            e.printStackTrace();
        }
        catch (IllegalAccessException e) {
            // handle exception
            e.printStackTrace();
        }
    }

}
